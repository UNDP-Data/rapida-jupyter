name: Build docker image

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PRODUCTION=true
          outputs: type=docker,dest=${{ runner.temp }}/myimage.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myimage
          path: ${{ runner.temp }}/myimage.tar

  deploy-acr:
    name: Build and deploy to Azure Container Registry
    needs: build-image
    runs-on: ubuntu-latest
    environment:
      name: azure container registry
    env:
      IMAGE_NAME: ${{ github.repository}}
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: myimage
        path: ${{ runner.temp }}

    - name: Load image
      run: |
        docker load --input ${{ runner.temp }}/myimage.tar
        docker image ls -a

    - name: Log into ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Load Docker image and push to ACR
      #if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')}}
      run: |
        docker tag ${{ needs.build-image.outputs.tags }} ${{ secrets.ACR_ENDPOINT }}/${{ needs.build-image.outputs.tags }}
        docker push ${{ secrets.ACR_ENDPOINT }}/${{ needs.build-image.outputs.tags }}

  deploy-github:
    name: Build and deploy to GitHub container registry
    needs: build-image
    runs-on: ubuntu-latest
    environment:
      name: github container registry
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository}}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myimage
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/myimage.tar
          docker image ls -a

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load Docker image and push to ACR
        #if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')}}
        run: |
          docker tag ${{ needs.build-image.outputs.tags }} ${{ env.REGISTRY }}/${{ needs.build-image.outputs.tags }}
          docker push ${{ env.REGISTRY }}/${{ needs.build-image.outputs.tags }}
